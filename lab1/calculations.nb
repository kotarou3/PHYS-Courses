(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     31252,        705]
NotebookOptionsPosition[     30554,        677]
NotebookOutlinePosition[     30888,        692]
CellTagsIndexPosition[     30845,        689]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"data", " ", "=", " ", 
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{"\"\<~/mnt/phys3117/lab1/3.3-data\>\"", ",", " ", "\"\<tsv\>\""}],
     "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"2", ";;", "All"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit", " ", "=", " ", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"data", ",", " ", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"a", " ", "x"}], " ", "+", " ", "c"}], ",", " ", 
         RowBox[{"x", " ", "<", " ", "k"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"b", " ", "x"}], " ", "+", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "k"}], " ", "+", " ", "c", " ", "-", " ", 
            RowBox[{"b", " ", "k"}]}], ")"}]}], ",", " ", 
         RowBox[{"x", " ", "\[GreaterEqual]", " ", "k"}]}], "}"}]}], "}"}], 
     "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", 
      RowBox[{"{", 
       RowBox[{"k", ",", " ", "53"}], "}"}]}], "}"}], ",", " ", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", "\"\<ParameterTable\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"fit", "[", "\"\<MeanPredictionBands\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "data", "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Normal", "[", "fit", "]"}], ",", " ", 
       RowBox[{"fit", "[", "\"\<MeanPredictionBands\>\"", "]"}]}], "}"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "200"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7157500039636803`*^9, 3.715750079899053*^9}, {
  3.7157501159447536`*^9, 3.715750123153661*^9}, {3.715750188400098*^9, 
  3.715750232868095*^9}, {3.71575477190874*^9, 3.715754779219425*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.5`", ",", "0.0128`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25.`", ",", "0.0331`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37.5`", ",", "0.0664`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50.`", ",", "0.236`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"52.5`", ",", "0.69`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53.8`", ",", "1.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55.`", ",", "1.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"62.5`", ",", "8.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75.`", ",", "20.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"87.5`", ",", "33.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"99.7`", ",", "45.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715750081056869*^9, 3.715750123612833*^9, {3.7157502072416763`*^9, 
   3.715750235136962*^9}, {3.715754773380165*^9, 3.715754779717258*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{
              RowBox[{"-", "0.11012504731061352`"}], "+", 
              RowBox[{"0.009550591814860489`", " ", "x"}]}], 
             RowBox[{"x", "<", "53.54310307225806`"}]},
            {
             RowBox[{
              RowBox[{"-", "51.06730894899869`"}], "+", 
              RowBox[{"0.961254564461343`", " ", "x"}]}], 
             RowBox[{"x", "\[GreaterEqual]", "53.54310307225806`"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 0.009550591814860489, $CellContext`b -> 
      0.961254564461343, $CellContext`c -> -0.11012504731061352`, \
$CellContext`k -> 53.54310307225806}, {{$CellContext`x}, 
      Piecewise[{{$CellContext`c + $CellContext`a $CellContext`x, \
$CellContext`x < $CellContext`k}, {$CellContext`c + $CellContext`a \
$CellContext`k - $CellContext`b $CellContext`k + $CellContext`b \
$CellContext`x, $CellContext`x >= $CellContext`k}}, 0]}}, {
    1}, {{0.4, 0}, {12.5, 0.0128}, {25., 0.0331}, {37.5, 0.0664}, {50., 
     0.236}, {52.5, 0.69}, {53.8, 1.1}, {55., 1.9}, {62.5, 8.6}, {75., 
     20.6}, {87.5, 33.1}, {99.7, 45.}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`k, $CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.715750081056869*^9, 3.715750123612833*^9, {3.7157502072416763`*^9, 
   3.715750235136962*^9}, {3.715754773380165*^9, 3.7157547797196503`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"a", "0.009550591814860489`", "0.006709443346876715`", 
      "1.4234551692438606`", "0.1924123705292804`"},
     {"b", "0.961254564461343`", "0.007520227866206084`", 
      "127.82253165239405`", "1.5688931177004692`*^-14"},
     {"c", 
      RowBox[{"-", "0.11012504731061352`"}], "0.23632595513013094`", 
      RowBox[{"-", "0.4659879497788302`"}], "0.6536485440504065`"},
     {"k", "53.54310307225806`", "0.2935322324596617`", "182.40962031185504`",
       "9.129778570338458`*^-16"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.715750081056869*^9, 3.715750123612833*^9, {3.7157502072416763`*^9, 
   3.715750235136962*^9}, {3.715754773380165*^9, 3.7157547797313004`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{"-", "51.06730894899869`"}], "+", 
           RowBox[{"0.9612545644613432`", " ", "x"}], "-", 
           RowBox[{"2.306004135204168`", " ", 
            SqrtBox[
             RowBox[{"0.3114893371266971`", "\[VeryThinSpace]", "-", 
              RowBox[{"0.008172028024571235`", " ", "x"}], "+", 
              RowBox[{"0.00005655382715966252`", " ", 
               SuperscriptBox["x", "2"]}]}]]}]}], 
          RowBox[{"x", "\[GreaterEqual]", "53.54310307225806`"}]},
         {
          RowBox[{
           RowBox[{"-", "0.11012504731061354`"}], "+", 
           RowBox[{"0.009550591814860489`", " ", "x"}], "-", 
           RowBox[{"2.306004135204168`", " ", 
            SqrtBox[
             RowBox[{"0.05584995706816865`", "\[VeryThinSpace]", "-", 
              RowBox[{"0.002669486160479427`", " ", "x"}], "+", 
              RowBox[{"0.00004501663002494821`", " ", 
               SuperscriptBox["x", "2"]}]}]]}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{"-", "51.06730894899869`"}], "+", 
           RowBox[{"0.9612545644613432`", " ", "x"}], "+", 
           RowBox[{"2.306004135204168`", " ", 
            SqrtBox[
             RowBox[{"0.3114893371266971`", "\[VeryThinSpace]", "-", 
              RowBox[{"0.008172028024571235`", " ", "x"}], "+", 
              RowBox[{"0.00005655382715966252`", " ", 
               SuperscriptBox["x", "2"]}]}]]}]}], 
          RowBox[{"x", "\[GreaterEqual]", "53.54310307225806`"}]},
         {
          RowBox[{
           RowBox[{"-", "0.11012504731061354`"}], "+", 
           RowBox[{"0.009550591814860489`", " ", "x"}], "+", 
           RowBox[{"2.306004135204168`", " ", 
            SqrtBox[
             RowBox[{"0.05584995706816865`", "\[VeryThinSpace]", "-", 
              RowBox[{"0.002669486160479427`", " ", "x"}], "+", 
              RowBox[{"0.00004501663002494821`", " ", 
               SuperscriptBox["x", "2"]}]}]]}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.715750081056869*^9, 3.715750123612833*^9, {3.7157502072416763`*^9, 
   3.715750235136962*^9}, {3.715754773380165*^9, 3.715754779771132*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.4, 0.}, {12.5, 0.0128}, {25., 0.0331}, {37.5, 0.0664}, {
       50., 0.236}, {52.5, 0.69}, {53.8, 1.1}, {55., 1.9}, {62.5, 8.6}, {75., 
       20.6}, {87.5, 33.1}, {99.7, 45.}}]}, {}}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
U8jO9esfG6Px+0+L9ZpSKfwP2zJ02g==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
tO33uKAI7idi1xfj/wAT4PIq
       "]], LineBox[CompressedData["
1:eJwVz31QzHkAx/F2kagcJTqUpJDZcaVaTJffJ+zE/opala229fv1+KXSZkNN
Gw1NwsXezXmYUpKcy1NJCMvV5unIZtKlVUp3U85Da+22Padzf7zn9fd7QXSK
KI5rZma2/lv/e3lJ3vKrz4WoJdsdhZYFlMTamwl4KcSooEBemHaNsijNNbi1
CVEVwJedi6mlqvmtOZP/EeLvR3PdP1s9oayYzHK1QYhinVxYXfGSqulr8CkZ
FqJUp59G57yiYg85arK4NIwxlKpd3EapquoMK21oFGgyIgazu6ikSRY/VnjQ
0OSblva6vacaLv6qKZTRqNZuzrzk20elUz1MRjqNpN9Ome4uN1EuzSuMYdk0
6gpyrJ4t7qcUY69n2yhpLLX72aJ7xiDFC1rA5lXQGL1zmmvRM0L9ZLpiTNPR
oFQr5k98zAGNx/YbkwKwuiaxJHXHFPyxRjt5IH8jyktSfTs3OMDQb/WiSRQE
k3SlyUq9CDy7uHVFAcFozr+nuh6wDAvO2PYcihTBXafJmrXKE/e+DFVsE2+G
3cxlZV7cFZhZyb+QuD0EzqcELSJ7H9Srp8ple0LxZ68seK09hTnFsxLIzjAc
nq1Q3yd+4HWn5+3fvwWr3S+k30lai+4+m6Zj2WL4L0zZNxwoQL94nf5MRjg8
+wxdMld/qJc0+DQdjMCSuKMzS102wLvuSMXAgUhIo/PfZHJoxDw8G0Qdl6Bt
tuV7F/NAfHDY9OjQ2Sj4s/bm4GyCPeUV+7hQCv6q3mLb5CBwGlJ+WHxpK45k
5T7dlRyMJ8rUGb4hDOjBta71EhFU3btNCS8YaPszd4f4b8ZR2WL9wi0svDW9
rS2CEFzvNO7VNrMQHnf9a71nKG7mJLo4RUXDyUOsvOwVButp41FMezTWxPMP
cFy3QOnXwXEOj0EtN36kaLoY+otElfY2BuXm37XxpoejbHCaZZ00FvWTDL9c
/RoObwUjK34Xi1UbRzucOZEwlo9RY8lxkAxmne/8GomJqpvnQj/GQXo+UaD8
KIFxwlxHSh4PB0vHCs9PUfB2L+Q5G+IRFSiVPGuT4px5wvncHQkQFhkllx9t
xWebDi+FKQH3klmn2mgGxyakihPlBB2Z+3aWaRms4/ZeLNpFwLX1E91qYzBo
tm2scQ9Bj/Oox9M3DJivTKmXgqDzlvTL5y4Gy4eCPo3lEDzhtqT4fGDQonPP
Vp4g0KYfS2waZuD4Wn/hxm2CKQpIzeaxaGpNGn53l4BE8H1tHVkcfPVvwJz7
BG7mi+YtcmKhb377Za+aYKjRoKVdWKgbX/isf0agl68JPcljEf+wsvF1O4HS
QyVc5stizgOes3UngYVdkJsfxaJR/Xsa1UVgrXszOcSPxcraku/LuglOH373
IEPAYupdZUyyjiCrqmr1w0AW929b3TyjJ5h/cJZD6yYW8po8iybDt9/YtJEP
wSzab2Rf4Q8QHBY41kwPY6GsHh0nQwRU4PYTC8UsBNfTRYUjBPUJlWn8CBbD
1/rKno8RKE7qRRskLK5WygbGxwk0HUs9JFIW/wFRYBLF
       "]], 
      LineBox[CompressedData["
1:eJwV1nk4lGsbAHBKosbWghaSJWIMY3AYy32nYkwpxGQsWbJVVKQiS1KWylIq
KktOTY4lJB1Ji71dh/Z5Z+yFxpIKlcL3fn+813v9/nme53qee1vtt885YI6Y
mNh78vv/Xz1j+lq+art1Hl9f9cgbAdiF/SMdGlwByfKTMdNtAnDqoWboBNfB
TtaavoRWAXAufXGSDP4PdJRGXp57JAC3CUfGRFAXlOvOD3hZIwDuNXHecNAX
SEgLzSvKE4D7FNdzMGgWzFnx0XN2CSD80dGH5+hiOKr97NDzAAHUZLzawqgQ
w+Fmw6dZfgKwUY/cF14ijkw0jjP2JNe3a7o5VjAXK6TmHUrdKoATZ7mMkbT5
qDDYJF9pKgBCK8msP0gOZxttfHokBTCteaJLcUwOT/GnDt6fKwD5ReuaNCzl
UTLP4N5lMQEYKcBul2Z5DE6L/+gzRUCknEXNv28UsDjYUHvJKAESFIZL5MRi
/O1yX3P5OwJWztNInTZVxkDgL2oqIqBc4mrX0mhlzPedTKIUEgASqxm0OmW0
ZvnXcq8R4Dd3FbHDbhlalk6Gz+YRUCS+Qqd++3J0vT5UHXmOAMbMouaEyJWo
Iq8wR/soAdejxWfmeqlhbhl9MptLQML449SXMWqoU+F4L2U7AT6h6Ssu5aph
9sB8j1hX8jzeK8xpQjXkhpywCnciINPGJMLNYzXWfJNQOm1PwFHpXaIbXHVU
2UuJiGUS4JlgEHU4Sh3PcxyMys0IYP6emG9zSR0XPGas6DMlYHI4Qev9B3U8
mdp5jMsgIKQt10fcTQMlyotMo6gEcLPb3rlyNFHiW/V4yioCTOWzA9QOaeL7
1n1dMyoELDnpNS66oInyVsWbolYS0HZEpBD/VhP3L9lcF72MANsdEg4lLlrI
eVNcdWcxAZrvnwkiIrTQ0T2N7byIAHHHs7vhvBZOchec/SpPwP11qilvXmsh
63vQBmtZ8r60zJpmnNegj3nYkLw0AfL5M05Pw9fg2ZEb19vnEzCq2NJ9LnMN
1k3uh2xJAkqknGd0Xq1BaxklXboEAWrDe8y3OWnj4iqNkwWzfJCpulLxz1Yd
TGnifg3/wYdDir8uvtqrg2P3AxknJ/nQGeWcMJ2mg2GbfiTyJvhwE+e5bnuh
g0HOKQdF3/ng/HL31AxrLY6UWtFuj/HhHr25b23wWnyyVpr3/QsfNC+otLok
r8UYFHqakZ7waLtS0rIWDa13VraP8OHiZ5ONHBtdLC2i5G4Y4oOYQwbtmK8u
+ommuspFfNh1c1DpRrwuxqZCjipp5uEckXidLgZ/jM6U/cyHa8T4a2qnLu5N
7RCkD/KBYr3lwfZpXcyK3HVnCekOCfEzZRZ6mEDRQPoAH2yD3aM+uOvhL9Xx
qcf9fCh/XuU394geClmmO/1JKxnIbKZd0sMs/dajkqTjMwNNuDV6uPjyte3l
n/gwOFGneuK9HsofL/3qQdqJu0yqYlIPmXM7XeRI194P/8pfSkV1rkXKk498
UFd7QUiYUPHTx2eZyaRPH9dqNnCh4iOtnOjNpMf748rcD1Ax8k6DvRJpT/aH
rMRMKjK3ekgM9vGhpYwef7OSio01p289JE1TOL1L0EbF4VexHjmksyI+OkuO
UdE8dadkHOnZ91aWdDl9nN91sDaQdLBFtpYnTR+vto7HuZJuyx+TTXbQR9kd
2h5s0uZz2D8rQ/Qx94IHZyPpqwHXeoSn9REj+g/bkl7w9M+z+aX6WPlF47ED
6QNUzm2jZ/poM3pokwdpYUZFntdnfUxYZ0/ZR3rDd6nkFCkaFhUsVDhJuozj
t79Km4ZXrpr4FpNWrL3H7bSl4fSdjRJtpONUlq6XDqThec0G8WnSA/F7qcaJ
NGz9yfA1JO/D8ePjpd48Gr5YQNfdTbrGbvXsySYamn1x8i8hvbr0yODtXhq+
+2qq9JX0Kdk37V3iBtgik8y2Jt/jW5j+vQWrDfDMpy/zMkl7vE3imaABfqjV
chom3WzWnebjTTqgj+FAvveF2Uyf6jwDdOTO6VIn42XGb9i+574Bznz9VZ1N
OvDRRgZFaIBFI9c3LibjK9f2zxy6jCGaBqQXqpLxSPGOu6ysaohmtL4F90jH
HBYzEjMwxNsDGdHeZPx6Fkn4/udoiGWbckrqyXh/UZ/0s9rXEN3d/WNjh/lg
yZc6kx9uiP7T3EQbMj9WLpCpCz1viKcW/fH6NMqHVPUMjut1Q5Tkua5vIvPp
D1Nh1LLaEJ90mSQXk/kn3LNUhfLBEFX2WLlkfCPP16oSXbKCjm//zFvbQOYz
pf/KokwqHX0Nf2n3kfkeM7O6JMqKjnJnrvJlfpHnM1jDZ3nTsbHjwdHY3+T+
Z2l/DVylY9ot6tzHYgSkFt98+bKKjqxjVU0Gcwj402AUWN1Mx1c/xlL/nkuA
8JvphcR+OuYulw0oIOtPngt819A1wm75XC+KDAGyoQ2nFloYYfP2gxcekvUs
LnG9+vdNRrhDK0//CFnvdlTbOTWGGiHvi2ypzBICVJUdK3wqjfDG80UK/6wg
IN3wlS2r0QgPRLcfu07W2xmWS6fBayMs/PK0tIysx51RbjKz40aY30t3E2gQ
kC/w2ZNnxsADPQyHMrJ+y473zkm0Z2Bly8+GKRq5PyXgcog7A0dkBuyd6eT+
VrueWsQw8HZ7WP0qsh+oXgnTJuoYGJKsmmiC5Hp+CX2KdsYY+5HO5XAIuPgj
uayDY4yJylbJSmS/OpeadpgXaIwbzZYu6/UgIKX64kKjJGPs4ymlnfMlIHxB
BcOhxRhFMddrgkPJfnBLcPz4ehM8JL9F72MSAWjX48DeZoKF21YOwCkCLIT9
Sgo7TXBm9val62kEGEp+K81PMMEU2fL5GecJWO4u9eZugwlesH4sIbhK1n9x
E80xMEVqjm+AdwMBg1nM0eqtpqjxZMPTHS0E9OlhTay3KfJuJFYFPyXgg+um
zQuPmqKAgta57QQ0FvtGrHloijvW96sd7yUgyym92dPyL9Qa7ry2nZwnrP4e
8H9qZoa/MlzncTgCGM9tdOq1N8NaEPfSJeeTkot51r/dzXCbq5sdhZxfFM9s
U9aPNcOiC3JTP0MFMBpX9/xMgxmeaI/oOJQkgALPbCM3tjnuSspIpNSS85Rb
+KowD3OM77np9LBeABQXB8qpEHNksias4x4LIHLT3P576eaYL++Vp/OWnMeY
+y6tem2O/o2udjpfBTBH2U5swIOJzO9t/Xw9IdQsVh+ZDWFi7f5OzzCGEPbK
TfOV45g4s7lzl5KFEASSVVXsAiYub9/il8EWwu0J1aDyj0wMEaVHGewWQsDr
ydaDoRYom9CEJjeE8CS9MEfiqCWKtqmeiLTogObZZ/+2ZliiW+doQf2GDqjf
/+W/rAJLTK26vV1pSwfccTaTWNtoibyy9Jwxnw4oVHwW4jDPClnmmjedkzvg
eP6IVdZpK0x/38V8964DrMuNu7UvWmP3d5eNHfGdwFzFnRorskY3SRXjqdOd
YHomdkntXWs8xQyo08ruBP3wR6zNAmtsK+68WlTWCStN3Sr3qwIGH5Zw9xJ0
wq8H0Ql3eYCRN0A83rwLiEDfzOtuiJpivhV2Yt2Q5/VvTZQPosetMI6DZDf4
uEh3OQQjHpeJV+NSuqF/XaXe5GHEm5/aFx9X7oZvK8VbbLMRy88XGarRu2Hh
64IfA28RV7eIhmN2doMldHvqbluHEoIlz0tfdMMVJW/tCgcbzNn0gLLqZg/U
N6h4Uzk2KCacHTGp6YHuPcKs4h02GHF0h/i2+h5Qr+dK8vbZoCPvRdGVth4o
DHb5dPGsDa6q6/VN+NoD5XftryW8tcEBOcuSYONeuO9hvIrjtR7PZC1gnX3Y
C8QVaaXpkA1YPuCYt6ivD3be1dhOD7ZFLSf1iFTTfsiLDsE9XBYeKbVlYMUg
SDjHmPN9WcgqzuxzrB2E3TqpRna7WXix+QDVv2UQzN6WampEs3DyLONIpmAQ
XtOGpAS5LOTc9SqUkfoM0r272tndLOz36XSN9v0MB1lBfrpB9nj77a18FUUR
CFUPe1zcZ49EXDQlerUIbCaSXCQj7XHJepsygioC+auFtr0p9njFxCSmYL0I
Sn9/0r1cYo+FwmOzG8NE0FPu/1161B7t8vy0J1+IgJUYMXx40h7tOUNhBz+I
oNzjxKdPM/a48MFI42SfCGKkeO8b5NjI6H4UOjslAiW/vntRdDYOj+7P01k7
BA5L/U58jmCjf5T0mg+JQ/CzuErxcQwbY36bn6w4MwQ863nFvBNspAUmpabk
DMGfoKJW7/NsLK07twcqh6Dozy9vq1w2Uv/ds17l/hC4nN30bTmPjUaX06r+
PBqCG7Wjiu+q2BiiPeVSLxwCt61YXHWPjcue70/gDQzB2Ol5Oe4P2Cj/xsFj
9PMQ/A/BRVOm
       "]], LineBox[CompressedData["
1:eJwVxXk4lHkAB/Ahm9lKieQoii7b49mKyKae96vNbmvG0SC35p1x/CqiaFNJ
OoitNJkOu7aU4xk5MqKwqY2izTUeJqKhIlE5xjmuye7+8Xk+xrxQToAqg8Fw
/M//55rGm9+rs8fWcmG2enUf5aNhyWU32QOWFu3MFQMUMy1u+Ls39pBODkQc
nxmkiqxen1PvsscH6Ro7RZ+cWsA9cbdi2B7J3E7D0OphqmS01ub2lD30TA8O
mpWOUP4JRvUnVVmYk1Q5t080SpXdLx+21mLBImlA42DsOBX8DXNb/iYWWiU+
4tOYomqzr9anhLFQNd0fGvGGgUjqI/dYJAvr9Y1H2zkqWC3dMrInhoXbaYz1
u6pVEKVs09USsJATnHnPqFQVZs7GdHw+C7ysMSvpdTVcHMsbiRhg4X1gySoe
hwkWXug5BrPBy5QVa1Yvgmv82TJpBBs9x8S36tZowq+B4nqfZINfkOcrDNTE
YW6JiCSyYVRv57KyVxN/xNy1Oitmo6rzz034shi9Ty+4loyy4bq1jJ88pI1Y
W2eByUkHUKol+uKvuvh7R6u64pIjlq8fVLhprMTw+IKGRo4z5keP5qSpm8JM
J2DnTfZuZMhsmC+jN8A4VftjgjcHyzvN+7QaLPB4aDJ/n4cLinNnPK+kbsES
sZXowH5XHO/P3XT1uQ2eVcwLDzvqBm8Z7IJaKRjcWhpEDu/BRa/EpYtf2cKs
OzL+zBl3qP3wwZTT8yO6R7UaL8d44O26QXFPsx3GPXbKU495oniidIXe459R
YVpr03jeC9nCbZOS2l9gWX4hX3HWG3qX8lQjS1ngV95xpq75IMg6VE0occBn
Q6eqhDu+EC0y3KIhc4Ietdn/RYofxtWK5mV3OkOlNnTDupy92Dcdr87o241/
BIcWb3fl4qWYZ13cxUFZ969jQQ1cOFXMagubXZAYtk6+yp3GMnH1tFGHKwrf
jkS3Smn8lj6Rqy51w8NzB1av9OXB+aiwLLVjDzQWzvpyZTysFeUoklrcIbDt
UDHx5EPgJHYU1XhAnk3KIt7xkWqX7r1f6omMiYXzy/380W4ZOxJX4wXLKG7Y
rR5/SK6IlnBavDFyV0kpQwLADBb4bO/wgVrZw3S3LwF4Ym31/ekmX4zMWWZE
hQeiRuWUS3i7Hyw3ppiZDAeisIuX/PjVXqTPDcqMOxiEwZob14T+XAxqdWyO
GgtCyLc6Uam9XFyec8jjQDhBEkdu0cKnsVO1P/vmEYISs68BygAaE4x9SslR
guWJWsmrCA3uV27a5iiCgjeOM6HBNMwnnfuU5wg+u+lUMo/QaB7YGCO4TrBs
f4v71jgaRm1y0YNSgvAThmduZtFofB081fOIwGuhouhZNo3zLb1sgycEXU3N
PZ9yacil74aiKwgy+7IcrApoVEgabHbVENRr3NCXlNIIrBRL2mQEh9uS7zNq
aBg8NzPReEuwg0i719bRkFRkRVDvCWIZS/UdJDSsn97Wz+gmiP8p59TvTTTm
PRLwQwYIXnYZOpjLaDwpXfAwVU4QEpMQ49FBI7wkntk4TCDXni6MfkdD9iAm
z0pBINORG9R8oCEompklkwShp8Idhz7SsCuM5KRME1g2z5zW/URjqmA0o05J
UKV78cH2LzTuicMUs7MEf9kaf+L30/gXZmJXlA==
       "]]}, {}}, {{}, {}, {}, {}}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{643., Automatic},
  Method->{},
  PlotRange->{{0, 99.7}, {0, 45.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.715750081056869*^9, 3.715750123612833*^9, {3.7157502072416763`*^9, 
   3.715750235136962*^9}, 3.715754773380165*^9, 3.7157548043450947`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "@", 
   RowBox[{"Length", "[", "data", "]"}]}], " ", "1.96", 
  RowBox[{"fit", "[", "\"\<ParameterErrors\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.715751648685706*^9, 3.7157516733812733`*^9}, {
  3.715751732889305*^9, 3.715751734383634*^9}, {3.715751799828978*^9, 
  3.7157518080137978`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.045536318976922625`", ",", "0.05103903218053276`", ",", 
   "1.603920551820599`", ",", "1.9921473629540545`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.715751673669043*^9, 3.715751734694529*^9, {3.715751800857497*^9, 
   3.7157518087784758`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0.9612545644613429`", ",", "0.05103903218053276`"}], "}"}], "/", 
  "2.7"}]], "Input",
 CellChangeTimes->{{3.715752590548908*^9, 3.715752595583403*^9}, {
  3.7157528194296713`*^9, 3.715752831698758*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.3560202090597566`", ",", "0.018903345252049168`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.715752600280209*^9, {3.7157528199604797`*^9, 3.715752832059263*^9}}]
}, Open  ]]
},
WindowSize->{1920, 1123},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2084, 55, 121, "Input"],
Cell[2667, 79, 1016, 29, 32, "Output"],
Cell[3686, 110, 3355, 84, 69, "Output"],
Cell[7044, 196, 1279, 27, 93, "Output"],
Cell[8326, 225, 5184, 131, 72, "Output"],
Cell[13513, 358, 15850, 277, 418, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29400, 640, 340, 7, 32, "Input"],
Cell[29743, 649, 293, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30073, 661, 255, 6, 32, "Input"],
Cell[30331, 669, 207, 5, 32, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
